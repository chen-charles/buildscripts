diff --git a/gcc/config.gcc b/gcc/config.gcc
index 6a349965c0a..3a1e9bec23d 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -836,6 +836,14 @@ case ${target} in
   target_has_targetcm=yes
   target_has_targetdm=yes
   ;;
+*-vita-eabi*)
+  extra_options="$extra_options gnu-user.opt"
+  gas=yes
+  gnu_ld=yes
+  use_gcc_stdint=wrap
+  tmake_file="${tmake_file} t-slibgcc"
+  thread_file='posix'
+  ;;
 *-*-netbsd*)
   tm_p_file="${tm_p_file} netbsd-protos.h"
   tmake_file="t-netbsd t-slibgcc"
diff --git a/gcc/config/arm/arm-c.c b/gcc/config/arm/arm-c.c
index 7468a20bd98..3496590c47c 100644
--- a/gcc/config/arm/arm-c.c
+++ b/gcc/config/arm/arm-c.c
@@ -372,6 +372,8 @@ arm_cpu_cpp_builtins (struct cpp_reader * pfile)
   builtin_assert ("cpu=arm");
   builtin_assert ("machine=arm");
 
+  builtin_define ("__vita__");
+
   arm_cpu_builtins (pfile);
 }
 
diff --git a/gcc/config/arm/arm.h b/gcc/config/arm/arm.h
index 30e1d6dc994..a48a086cbf9 100644
--- a/gcc/config/arm/arm.h
+++ b/gcc/config/arm/arm.h
@@ -731,6 +731,10 @@ extern const int arm_arch_cde_coproc_bits[];
 #define WCHAR_TYPE_SIZE BITS_PER_WORD
 #endif
 
+/* use int and unsigned int for int32_t and uint32_t */
+#undef STDINT_LONG32
+#define STDINT_LONG32 0
+
 /* Sized for fixed-point types.  */
 
 #define SHORT_FRACT_TYPE_SIZE 8
diff --git a/gcc/gcc.c b/gcc/gcc.c
index 9f790db0daf..615baded36f 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -656,14 +656,18 @@ proper position among the other output files.  */
 
 /* config.h can define CC1_SPEC to provide extra args to cc1 and cc1plus
    or extra switch-translations.  */
+#undef  CC1_SPEC
 #ifndef CC1_SPEC
-#define CC1_SPEC ""
+#define CC1_SPEC "%{!fno-pic:%{!fno-PIC:%{!fpic:%{!fPIC:" \
+                 "%{!fno-pie:%{!fno-PIE:%{!fpie:%{!fPIE: -fPIC}}}}}}}}"
 #endif
 
 /* config.h can define CC1PLUS_SPEC to provide extra args to cc1plus
    or extra switch-translations.  */
+#undef  CC1PLUS_SPEC
 #ifndef CC1PLUS_SPEC
-#define CC1PLUS_SPEC ""
+#define CC1PLUS_SPEC "%{!fno-pic:%{!fno-PIC:%{!fpic:%{!fPIC:" \
+                     "%{!fno-pie:%{!fno-PIE:%{!fpie:%{!fPIE: -fPIC}}}}}}}}"
 #endif
 
 /* config.h can define LINK_SPEC to provide extra args to the linker
@@ -673,8 +677,9 @@ proper position among the other output files.  */
 #endif
 
 /* config.h can define LIB_SPEC to override the default libraries.  */
+#undef LIB_SPEC
 #ifndef LIB_SPEC
-#define LIB_SPEC "%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}"
+#define LIB_SPEC "%{shared:-shared} %{static:-static} %{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}} %{pthread:-lpthread} %{shared:-lc} -lSceRtc_stub -lSceSysmem_stub -lSceKernelThreadMgr_stub -lSceKernelModulemgr_stub -lSceIofilemgr_stub -lSceProcessmgr_stub -lSceLibKernel_stub -lSceNet_stub"
 #endif
 
 /* When using -fsplit-stack we need to wrap pthread_create, in order
@@ -794,14 +799,16 @@ proper position among the other output files.  */
 #endif
 
 /* config.h can define STARTFILE_SPEC to override the default crt0 files.  */
+#undef STARTFILE_SPEC
 #ifndef STARTFILE_SPEC
 #define STARTFILE_SPEC  \
-  "%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}"
+  "crti.o%s %{shared|static-pie|pie:crtbeginS.o%s;:crtbegin.o%s}"
 #endif
 
+#undef ENDFILE_SPEC
 /* config.h can define ENDFILE_SPEC to override the default crtn files.  */
 #ifndef ENDFILE_SPEC
-#define ENDFILE_SPEC ""
+#define ENDFILE_SPEC "%{shared|static-pie|pie:crtendS.o%s;:crtend.o%s} crtn.o%s"
 #endif
 
 #ifndef LINKER_NAME
diff --git a/libgcc/config.host b/libgcc/config.host
index c529cc40f0c..931f88f2b79 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -497,6 +497,10 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems*)
 	tmake_file="${tmake_file} arm/t-arm arm/t-elf t-fixedpoint-gnu-prefix"
 	tm_file="$tm_file arm/bpabi-lib.h"
 	case ${host} in
+	arm*vita*)
+		tmake_file="${tmake_file} arm/t-bpabi t-crtfm t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-elf-ver t-slibgcc-nolc-override"
+		extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o crti.o crtn.o"
+	  ;;
 	arm*-*-eabi* | arm*-*-rtems*)
 	  tmake_file="${tmake_file} arm/t-bpabi t-crtfm"
 	  extra_parts="crtbegin.o crtend.o crti.o crtn.o"
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index fe182883536..abbe4bea4c1 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -35,6 +35,19 @@ case "${host}" in
     AC_DEFINE(HAVE_TANHF)
     ;;
 
+  arm*-vita-*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    AC_DEFINE(_GLIBCXX_USE_DEV_RANDOM)
+    AC_DEFINE(_GLIBCXX_USE_RANDOM_TR1)
+    GCC_CHECK_TLS
+    AC_CHECK_FUNCS(__cxa_thread_atexit_impl)
+    AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)
+    AC_CHECK_FUNCS(timespec_get)
+    ;;
+
   mips*-sde-elf*)
     # These definitions are for the SDE C library rather than newlib.
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
diff --git a/libtool.m4 b/libtool.m4
index e194e899fcf..ef06d13bad3 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -2499,6 +2499,16 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | uclinuxfdpiceabi)
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+eabi*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
@@ -3098,6 +3108,10 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | uclinuxfdpiceabi)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
+eabi*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
 netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
